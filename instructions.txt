CS201 ASSIGNMENT 3 INSTRUCTIONS
-------------------------------

Your program will use fork to create a child process. Then, the parent process
will send a sequence of numbers to the child. The child will check to make
sure that it receives an even number of integers. If so, then it will
calculate the average value (truncating to an integer value) and return that
information to the parent.

Your code will be called with command-line arguments consisting of positive
integers. Do not worry about bad command-line arguments such as "xyz". Your code
will not be tested in this way.

The parent process will take the arguments to main(), convert them into ints by
calling atoi(), and send those ints one at a time to the child process through
a pipe (one call to write() for each int).

The child process will read the integers sent by the parent process one at a
time. The parent will send the value "0" when all of the data has been sent.
If the child received an even number of values (not including the "0"), then
the child will calculate the average of all of the values, truncated to an
integer, and will use a pipe to communicate the average value back to the
parent.

The parent process will need to reap the child process to find out the return
status of the child. If the child received an odd number of values then the
returned average should be 0 and the child process should exit with a
non-zero return code.

If I call your code this way:

    a03 11 22 33 44 0

The parent process should print out:

    average = 27

If I call your code this way:

  a03 11 22 33 0

The parent process should print out:

  Error in the data

Your code must be able to handle any number of command line arguments.

You will need to use two pipes to do the communication. One pipe for sending
data from the parent to the client and one pipe for sending the data from the
client to the parent.

Important: printing should be done only by the parent process. The child process
should not print anything.

Start with the provided code file a03.c. Upload your code as a03.c.

--------------------------------------------------------------------------------

REQUIRED PLATFORM

I grade your code on syccuxas01.pcc.edu. Your code is required to compile and
run correctly on that machine.

COMPILING YOUR CODE

You are required to compile your code with the following flags (plus the math
library -- see above):

-m32 -std=gnu11 -Wall -g

GRADING YOUR CODE

Your code needs to compile without errors or warnings and run correctly. Code
that does not compile will receive zero points. Code that crashes will receive
zero points.

I use bash scripts to grade your code. Because of this, it is very important
that you submit your code with the file name that was requested. If you change
the file name, my scripts will crash, your work will not be graded, you will
have to resubmit a corrected version of your work, and you will lose points.

My scripts produce a log file containing your code, compiler warnings and errors
(if any), your code's output, and some statistics that are useful to me. I then
personally go through that log file to produce your grade. In other words, the
scripts don't generate your grade, they just make it more convenient for me to
generate your grade.

TO SUBMIT THIS ASSIGNMENT

Submit the requested file to Desire2Learn.

    * Be certain to check that you completed the upload successfully. After you
        click the Upload File button, you must also click the SUBMIT ASSIGNMENT
        button. This is very easy to forget. If you do not do this, I will not
        see your work and you will get a grade of zero for the assignment. I
        would recommend entering an email address so you can be notified that
        the upload was completed successfully.
    * You may upload as many versions as you wish prior to the due date. I will
        only see and grade the final one. You will not be able to upload
        assignments after the due date.

Points will be deducted for uploading a file with a name that is not as
specified. Every term I get a few students whose approach to following
directions is, shall we say, "creative." I encourage creativity in general, but
there are places where it is not appropriate.
